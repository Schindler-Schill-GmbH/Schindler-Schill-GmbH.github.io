<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IAutomation Class</title><meta name="Title" content="IAutomation" /><meta name="Help.Id" content="T:PCBI.Automation.IAutomation" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="PCBI.Automation" /><meta name="guid" content="fbdaa17b-c95c-4cae-9113-fbc713eaca62" /><meta name="Description" content="IAutomation is the root of all automation Funktions and the Interface." /><meta name="tocFile" content="../toc/ID0MB0A.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">PCB-Investigator Interface Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>IAutomation Class</h1><div class="summary">
            IAutomation is the root of all automation Funktions and the Interface.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="27856e2b-abd7-b4b8-2d7c-eb73d5330f15.htm">PCBI.Automation</a><br /><strong>Assembly:</strong> PCB-Investigator (in PCB-Investigator.exe) Version: 0<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">IAutomation</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">IAutomation</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">IAutomation</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">IAutomation</span> = <span class="keyword">class</span> <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">IAutomation</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0UB0EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="a155c70a-2e4b-4211-cfdb-62fbe7a07c77.htm">AlternativPlugInDirectory</a></td><td>
            Set an extra directory for PlugIns, if it exists and plugIns inside found PCBI load this plugIns.
            </td></tr><tr><td><a href="371ab37d-ec53-8b5a-7a89-87818d022bab.htm">AnalysisResultRootDirectory</a></td><td>
            Path to the root directory for analysis results
            </td></tr><tr><td><a href="f1071aa2-debb-1447-c28c-39624efd56bc.htm">Check4NewVersion</a></td><td>
            Gets or sets the option for checking for new versions on startup.
            </td></tr><tr><td><a href="53535c09-c8eb-7f91-0842-c854ce34e5ed.htm">ComponentFileUseHighest</a></td><td>
            Some ODB++ output tool use more than one component files e.g. components2, in some cases they are the newest version in other the lowest number is newest version.
            This depends on the output tool and with this option it is possible to select highest number of components file or lowest.
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="cb9c9f6e-904a-6cbc-8aa3-712197100de4.htm">CSVSeparator</a></td><td>
            CSV Separator is saved in options to use the same separator in all csv imports and exports. 
            /// Default is "," in some countries it is ";".
            </td></tr><tr><td><a href="806251a2-6be8-782a-3a26-78a26f52df41.htm">DEBUG_Output</a></td><td>
            Use DEBUG Output add more information to error log and gives developer more details and warnings by using interface methods.
            </td></tr><tr><td><a href="56014fe5-5aff-293b-c6f7-b91091e1af3e.htm">DeveloperPlugInDirecotry</a></td><td>
            Ask Option for plugin directory of user. This is used to load private plugins by starting PCB-Investigator.
            </td></tr><tr><td><a href="ac71730c-9ebc-172d-d1e4-939571ff1a67.htm">DrawComponentsSequentially</a></td><td>
            Use Mutex for component drawing.
            Needed for OV.
            </td></tr><tr><td><a href="d3e93ba6-988d-f9f2-71af-e33d4c3cdd86.htm">Enable3DPlugin</a></td><td>
            Sets/Gets whether the DirectX 3D Plugin should be loaded at the next start or not.
            (PCBIWindow must exist for proper use)
            </td></tr><tr><td><a href="a25f4851-2a5d-eefb-e6b0-316b6ec9cf05.htm">FindRoutCompAttribute</a></td><td>
            There are comp attributes for rout layers to change the drawing of routing elements. 
            If the comp attribute is combined with a side the lines and arcs are moved to get the correct display position.
            </td></tr><tr><td><a href="29b027a1-8c79-29a6-4567-17c8d84ebb2f.htm">HandleDynamicText</a></td><td>
            Dynamic text can be changed directly in upper letter, lower letter or used as it is defined (Default).
            </td></tr><tr><td><a href="d72c99e8-c059-32ea-aaf8-05cfc2c7ae36.htm">HideOnClosing</a></td><td>
            If HideOnClosing == true all PCB-I-Windows can only closed with "ClosePCBIWindow", otherwise they are only hidden.
            The default is false!
            </td></tr><tr><td><a href="ea1d60f5-b5d3-28bf-3a25-0742bc7313f3.htm">IgnorWarnings</a></td><td>
            Suppress warnings of PCB-Investigator error log.
            </td></tr><tr><td><a href="56391522-3052-5ee0-d174-f21c67b28c9f.htm">InstallationType</a></td><td>
            Ask for installation type.
            </td></tr><tr><td><a href="be9dee63-0272-4849-2e8e-bd61cc2e13b2.htm">IsDemoVersion</a></td><td>
            Ask PCB-Investigator how it is running. As Demo version or not?
            </td></tr><tr><td><a href="af0e86e5-5660-e24c-35b8-3f2ed7e41d8f.htm">LayerColorModeAdvanced</a></td><td>
            True if ColorMode is Advanced else means the default setting.
            This sets the color depending on the layer type.
            </td></tr><tr><td><a href="fab7423e-416c-c35a-604a-5c2cce8dff18.htm">PCBIDataPath</a></td><td>
            The easylogix\PCB-Investigator of user in application data folder. 
            </td></tr><tr><td><a href="6b1e255d-68dc-1d51-3711-ce9e8fe3d836.htm">RealTimeDrawing</a></td><td>
            Change the drawing methode, the same like in the options.
            </td></tr><tr><td><a href="521bfa54-1fe9-5f47-e7a7-900c665f1067.htm">SuppressRibbonForm</a></td><td>
            Suppress the special ribbon menu to use your own old menu style (you have to add a PCBI-UIItems.dll in AddIn directory to hide PCB-Investigator standard ribbon menu).
            </td></tr><tr><td><a href="fa2addc5-5730-39de-b9ae-44d58cc4eb3e.htm">SuppressStandardKey</a></td><td>
            Suppress F5 Button to update menu and dialogs.
            </td></tr><tr><td><a href="9713259a-dd1a-fa43-ea03-ad12aec7acf0.htm">SuppressUserNotifications</a></td><td>
            Suppress all messageboxes and ands more errors and warnings to the ErrorLog.
            This blocks the Drag N Drop method for opening Jobs, too.
            </td></tr><tr><td><a href="9a3356fe-e4b6-24ee-61ad-614824663460.htm">UnzipWithTempFileAttribute</a></td><td>
            Unzip files with temporary attribute to hold them in RAM instead of flushing to disk.
            </td></tr><tr><td><a href="3b5a0b38-e0c7-5c2e-8220-488108e5f558.htm">VERBOSE_Output</a></td><td>
            Logs even more debug information in combination with DEBUG_Output = true
            </td></tr><tr><td><a href="6283d81b-aa7b-030f-4d23-3b5f99a37d78.htm">WordWrapInErrorLog</a></td><td>
            Error log use word wrap to show all text in visible width of log window, if this is false it write the lines until next new line (\n\r) is comming.
            </td></tr><tr><td><a href="f611bc21-3eed-22eb-87a2-0b6cad1f5d6b.htm">ZoomAreaInflateValue</a></td><td>
            Distance around selection for zoom to selection feature (see PCB-Investigator options dialog page "display").
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDFEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="b72f0e54-059b-742d-017a-90aedf86614b.htm">AddToErrorLog</a></td><td>
            Add an entry to the error log, this can be a warning too.
            </td></tr><tr><td><a href="e49dfc60-5622-8169-27de-3551f103acac.htm">CheckAddInLicence(String)</a></td><td>
            Check out license for plugin.
            </td></tr><tr><td><a href="10b288e1-b45f-c5d6-102a-784ad136a4e9.htm">CheckAddInLicence(String, Boolean)</a></td><td>
            Check out license for plugin.
            </td></tr><tr><td><a href="dce6c883-dc96-a768-cd9b-8276b448819e.htm">CheckOutAddInLicence</a></td><td>
            Check out license for plugin. This also shows message if no license available and gives local users a way to insert license key.
            </td></tr><tr><td><a href="eb291769-0a70-258e-eb9d-66f090908311.htm">CheckPCBILicenceAPI</a></td><td>
            Check PCBI allows using API interface. It is possible to get an API license without option to show PCB-Investigator and maybe you can show PCB-Investigator but have no license to add your own API methods.
            </td></tr><tr><td><a href="40220e31-985b-a805-4f6c-f9455e01c4d3.htm">ClosePCBIWindow</a></td><td>
            Close one instance of IPCBIWindow, only relevant if HideOnClosing=true.
            </td></tr><tr><td><a href="732ad39e-bcad-446b-7571-69b9a0affdad.htm">CompareLayers(IPCBIWindow, ILayer, IPCBIWindow, ILayer, IPCBIWindow, Boolean, RectangleF, Boolean)</a></td><td>
            Compare to layers grahicly, internal it will be create two images of the layers and compare on 5 µm.
            </td></tr><tr><td><a href="dd2346c6-de8d-f9c4-9135-b546162f07a4.htm">CompareLayers(IPCBIWindow, ILayer, IPCBIWindow, ILayer, IPCBIWindow, Boolean, RectangleF, Boolean, Boolean)</a></td><td>
            Compare to layers grahicly, internal it will be create two images of the layers and compare on 5 µm.
            </td></tr><tr><td><a href="270424b7-6a03-eae1-f22a-f410ab75ea0b.htm">ConvertLinkListToFileList</a></td><td> </td></tr><tr><td><a href="50bfb620-1a72-4c71-b70d-4e190718418b.htm">ConvertLinkToFile</a></td><td>
            Returns null or a IFileData for different file links like:
            - "C:\\file.txt"
            - "https://server/file.txt"
            - "PCBI365://group/folder/file.txt:146"
            </td></tr><tr><td><a href="fa45ba20-b82c-5e2d-71f5-e7bb4bed1b91.htm">CreateNewPCBILibrary</a></td><td>
            Create a new IPCBIWindow without UI (only for use in pure library mode).
            Init the IAutomation before using this methode or copy the PCB-Investigator.exe beside your EXE-File.
            </td></tr><tr><td><a href="beabbb01-d03a-4c2a-1838-dd364db05545.htm">CreateNewPCBIWindow</a></td><td>
            Create a new IPCBIWindow.
            Init the IAutomation before using this methode or copy the PCB-Investigator.exe beside your EXE-File.
            </td></tr><tr><td><a href="949a7079-23bf-212a-f668-220c32ef88fd.htm">GetAllOpenPCBIWindows</a></td><td>
            Get all open IPCBIWindows.
            </td></tr><tr><td><a href="c556ded5-530f-048c-4f47-252a4adce270.htm">GetCheckedOutEdition</a></td><td>
            Ask license system whether there is a edition checked out or not? And if a edition is checked out the name will be returned.
            </td></tr><tr><td><a href="81165eb3-930d-8d07-d161-66a2d4b937f0.htm">GetEndDateOfLicence</a></td><td>
            End date of your PCB-Investigator license. It is important to init the options before, this will be done e.g. by create a IPCBIWindow.
            </td></tr><tr><td><a href="c2fb6e50-2f8a-f85a-cfae-6d2be9e04990.htm">GetErrorLog</a></td><td>
            The ErrorLog provides information in case of an read file error.
            </td></tr><tr><td><a href="34d491e0-f483-ce91-5e82-9a817e6546fa.htm">GetExternalOption</a></td><td>
            Do not use this Ini option in plugins!
            </td></tr><tr><td><a href="7fe7955d-0038-babc-64e3-f26c2105ecb0.htm">GetExternalProgramPath</a></td><td>
            Helper programs like comparer or Panel Optimizer save there path here.
            </td></tr><tr><td><a href="16772b23-ff5d-cd51-c8d1-7140fcadb8b6.htm">GetLanguagePackage</a></td><td>
            Return the language name e.g. english.
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="f9faa186-17c1-3ff2-41c1-ca7ea6e92929.htm">GetLCDongleSerialNumber</a></td><td>
            Gets the serial number of the plugged LC Dongle (red), or an empty string
            </td></tr><tr><td><a href="80c1c251-faba-14a7-2d26-77fe8cec211b.htm">GetLicenceMaxVersion</a></td><td>
            Returns the maximum PCBI major version, for which the licence is valid (e.g. "13" for "PCB-Investigator V13.x")
            </td></tr><tr><td><a href="ce210dcf-6a96-7d1d-0ce3-daf741ae9fa0.htm">GetPCBIWorkingDirectory<span id="LST8322F5EC_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            OBSOLETE: Get the internal working directory for temp-data or unzip jobs etc.
            (Default is user temp path: Path.GetTempPath()+PCBI)
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="3fa24efd-c317-330d-87d0-40e9bd8252b7.htm">GetPCBIWorkingDirectory(IPCBIWindow)</a></td><td>
            Get the internal working directory (+suffix if set in IPCBIWindow) for temp-data or unzip jobs etc.
            (Default is user temp path: Path.GetTempPath()+PCBI)
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="f9145f46-1a03-3992-63c8-b027b66f5ad4.htm">GetPCBIWorkingDirectoryBase</a></td><td>
            Get the internal working directory for temp-data or unzip jobs etc.
            (Default is user temp path: Path.GetTempPath()+PCBI)
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="a1083230-8202-8d19-83cb-a8192dedf3a8.htm">GetPlugInIgnore</a></td><td>
            Returns if a plugin is ignored and not loaded
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="c09abdd9-2687-36c7-c21c-71053f62f53f.htm">GetSODIdentityProvider</a></td><td>
            Returns the last used identity provider for SOD2 license
            </td></tr><tr><td><a href="353e72f6-11a6-3c6c-0801-e39fe473c83c.htm">GetSODUserName</a></td><td>
            Returns the SOD User name, if SOD is the active licence system
            </td></tr><tr><td><a href="3341e52d-3fc0-e5bf-ea5b-83ef9e7fcb08.htm">GetUniquePCNumber</a></td><td>
            You can use the unique PC number for generating your licence keys.
            </td></tr><tr><td><a href="eb01a2cf-0fb5-f649-1b91-9cfca1bd9cc8.htm">IAutomationInit<span id="LST8322F5EC_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Initialise PCB-Investigator and the IAutomation Interface, neccessary for calculations.
            Works only if PCB-Investigator.exe is in the same directory as startup application.
            </td></tr><tr><td><a href="636f9cc2-3424-a940-1fae-474c94a723d3.htm">IAutomationInit(Boolean)</a></td><td>
            Initialise PCB-Investigator and the IAutomation Interface, neccessary for calculations.
            Works only if PCB-Investigator.exe is in the same directory as startup application.
            </td></tr><tr><td><a href="84fae2ae-f1bd-b724-13e2-c0d51bc375de.htm">IAutomationInit(String)</a></td><td>
            Initialise PCB-Investigator and the IAutomation Interface, neccessary for calculations.
            Call this init at the begin of your application!
            </td></tr><tr><td><a href="e1f42cb5-c161-aabc-704c-1946b9909b85.htm">IAutomationInit(Boolean, String)</a></td><td>
            Initialise PCB-Investigator and the IAutomation Interface, neccessary for calculations.
            Call this init at the begin of your application!
            </td></tr><tr><td><a href="23bf2046-eebd-574f-a30e-1487a6a2f8d7.htm">IAutomationInit(Boolean, String, Boolean, Boolean)</a></td><td>
            Initialise PCB-Investigator and the IAutomation Interface, neccessary for calculations.
            Call this init at the begin of your application!
            And call this init only one time at the beginning, later use CreateNewPCBIWindow to get new IPCBIWindows.
            </td></tr><tr><td><a href="7aecbb41-bb23-21ad-b0e3-ff1bd5dc969a.htm">InitAssemblyResolve</a></td><td>
            Add Eventhandler to System.AppDomain.CurrentDomain.AssemblyResolve, to resolve PCBI dlls in resources/Plugin/DevPlugin (sub)directories
            </td></tr><tr><td><a href="ff548ac4-f698-4a63-e492-f3ce5422a1bc.htm">IsODBAllowed</a></td><td>
            Ask PCB-Investigator for checking ODB++ license.
            </td></tr><tr><td><a href="d23acf21-7853-884c-ea5c-c955386eec97.htm">MakeStringCADConform</a></td><td>
            Supersedes all not allowed characters with _.
            </td></tr><tr><td><a href="ca81d3c4-58e6-0629-e427-d4d52a66725d.htm">OpenEmbeddedDesign</a></td><td>
            Open a PCB-Investigator-Embedded-Design, this will only take the ODB++ data from the embedded design with the same licence the referenced PCB-Investigator version has.
            Attention: If you want to use the embedded PCB-Investigator to work without licence you have to call IAutomationInit with ExecutabelPathPCBI on the located embedded-design!
            </td></tr><tr><td><a href="31bdc36f-c0b2-9dd9-febd-535f34b368b5.htm">RegisterCodePages</a></td><td>
            Register addional codepages for Encoding.GetEncoding (e.g. Windows-1252)
            </td></tr><tr><td><a href="dd587a64-1c48-ea0a-5626-2c26907b1960.htm">ResetErrorLog</a></td><td>
            Clears the error log.
            </td></tr><tr><td><a href="3ec064e6-accf-62e2-2ac3-669bbf6a90ed.htm">SaveOptionToIni</a></td><td>
            Do not use the Ini option in plugins!
            </td></tr><tr><td><a href="d462b43e-541e-fda6-9443-cb6441083a6e.htm">SetDongleLicence</a></td><td>
            Set Dongle License. Dongle must be connected via USB!
            </td></tr><tr><td><a href="8374274b-a72f-24e4-9169-38048d7b54dc.htm">SetExternalProgramPath</a></td><td>
            Set The path for a helper program e.g. Panel Optimizer.
            </td></tr><tr><td><a href="f32c41d8-2f73-7ed7-17fe-9516a8c5d108.htm">SetFloatingLicence</a></td><td>
            Set Floating Server IP with Port.
            </td></tr><tr><td><a href="6001afc8-9759-fe1c-d7b1-18aad5ef7f5a.htm">SetLanguagePackage</a></td><td>
            Set the language for PCB-Investigator e.g. English.
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="bc20ce92-3175-c977-cdb2-c3d5c55c2ac8.htm">SetLibraryMode</a></td><td>
            Special Library Mode use extra license.
            </td></tr><tr><td><a href="b2f59155-4b16-5478-ee98-b2e0ee34dad3.htm">SetPCBIWorkingDirectory</a></td><td>
            OBSOLETE: Set the internal working directory for temp-data or unzip jobs etc.
            (Default is user temp path: Path.GetTempPath())
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="b2233f7e-957c-f25a-5ef4-10115d36b1a2.htm">SetPCBIWorkingDirectoryBase</a></td><td>
            Set the internal working directory for temp-data or unzip jobs etc.
            (Default is user temp path: Path.GetTempPath())
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="db73a0bd-afca-875c-d253-dca8ead10ec1.htm">SetPlugInIgnore</a></td><td>
            Sets if a plugin should be ignored and not loaded after next start
            Value can only be used after creating an IPCBIWindow instance.
            </td></tr><tr><td><a href="5ae5a792-fb06-f823-d53a-75ca82af265a.htm">SetSODLicence</a></td><td>
            Set User Name for SOD License System.
            </td></tr><tr><td><a href="dcb5a8ee-d17a-5c2f-f457-44947b261443.htm">SetSODTokenAsync</a></td><td>
            Switches license system to new SOD with a new refresh_token
            </td></tr><tr><td><a href="71a6b035-37fd-e166-78b9-09e9c1e85880.htm">UpdateDongleLicence</a></td><td>
            Updates the dongle licence from an existing XML file
            </td></tr><tr><td><a href="c07239fe-3a5b-7db8-3fde-3595ba125671.htm">UseSODToken</a></td><td>
            Switches License System to new SOD if encrypted refresh_token exists.
            </td></tr><tr><td><a href="c81bc95b-ae40-ec99-0354-46dc1e5c2fc9.htm">XMLDeserializeFromFile<span id="LST8322F5EC_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8322F5EC_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IFileData, T<span id="LST8322F5EC_4" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Deserialize a xml file with PCBI standard settings.
            </td></tr><tr><td><a href="b9e7b844-a9ae-fd86-19c8-b957278c6986.htm">XMLDeserializeFromFile<span id="LST8322F5EC_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8322F5EC_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IFileData, T<span id="LST8322F5EC_7" data-languageSpecificText="cpp=%"></span>, Boolean)</a></td><td>
            Deserialize a xml file with PCBI standard settings.
            </td></tr><tr><td><a href="73215585-1e0d-941b-dd8d-f8bfee9309e5.htm">XMLSerializeToFile(IFileData, Object)</a></td><td>
            Serialize a file with PCBI standard settings.
            </td></tr><tr><td><a href="76408025-13d1-2547-b489-4ff5a8633ea4.htm">XMLSerializeToFile(IFileData, Object, Boolean)</a></td><td>
            Serialize a file with PCBI standard settings.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDAEASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="6007bfee-b383-2163-9b8f-9b92cb8524a4.htm">PCBIErrorOccurred</a></td><td>
            The event if a internal error occurs.
            </td></tr><tr><td><a href="a7ae585e-c2a7-26ea-2c31-3a7b1e456ec1.htm">PCBINewDesignHistoryLog</a></td><td>
            The event handler is called, when a new design history log is created
            </td></tr><tr><td><a href="e87088e8-0b02-5334-fde4-a77a0b2817e8.htm">PCBIWarningOccurred</a></td><td>
            A new warning is added to the ErrorLog.
            </td></tr><tr><td><a href="aca6c8a7-e7ee-c8a4-e337-fc0f8562b88c.htm">PCBIWindowCreated</a></td><td>
            The event handler is called, when a new IPCBIWindow (with or without UI) is created
            </td></tr><tr><td><a href="8d7cc84e-dc8e-840d-727e-baa208d35f16.htm">PCBIWindowDisposing</a></td><td>
            The event handler is called, when an existing IPCBIWindow is disposed
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="27856e2b-abd7-b4b8-2d7c-eb73d5330f15.htm">PCBI.Automation Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column">more details online<p><a href="http://www.pcb-investigator.com" target="_blank" rel="noopener noreferrer">http://www.pcb-investigator.com</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40easylogix.de?Subject=PCB-Investigator%20Interface%20Documentation">support@easylogix.de</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>