<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IPolyClass Class</title><meta name="Title" content="IPolyClass" /><meta name="Help.Id" content="T:PCBI.MathUtils.IPolyClass" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="PCBI.MathUtils" /><meta name="guid" content="dfce1534-30d8-d847-b440-4ce44eb65a62" /><meta name="Description" content="Helpfull class to work with each outline of polygons." /><meta name="tocFile" content="../toc/ID0UB0A.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">PCB-Investigator Interface Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>IPoly<wbr />Class Class</h1><div class="summary">
            Helpfull class to work with each outline of polygons.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="aebba05c-63e9-6190-bbdf-1cd6211b775a.htm">PCBI.MathUtils</a><br /><strong>Assembly:</strong> PCB-Investigator (in PCB-Investigator.exe) Version: 0<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">IPolyClass</span> : <span class="identifier">IBoundable</span>, <span class="identifier">InterfacePolyClass</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">IPolyClass</span>
	<span class="keyword">Implements</span> <span class="identifier">IBoundable</span>, <span class="identifier">InterfacePolyClass</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">IPolyClass</span> : <span class="identifier">IBoundable</span>, 
	<span class="identifier">InterfacePolyClass</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">type</span> <span class="identifier">IPolyClass</span> = 
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IBoundable</span>
        <span class="keyword">interface</span> <span class="identifier">InterfacePolyClass</span>
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">IPolyClass</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="d28e59b4-a721-71e7-4957-735fbf1383a8.htm">InterfacePolyClass</a>, <a href="faa5581f-fdc6-3703-48e3-22cf5288d05f.htm">IBoundable</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDKFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="cf5e62f7-93d6-9379-b849-5617a0de035b.htm">IPolyClass</a></td><td>
            Constructor of polygon elements.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0EC0FASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="d87f0f17-0d34-9ede-800b-5dadecf3dd0c.htm">Color</a></td><td>
            Color Property of this polygon, used e.g. at IPolyClass::DrawFilled
            </td></tr><tr><td><a href="fa2bcd42-ea33-7763-0b99-fbd9c7c6e526.htm">DisableSplitToMatrix</a></td><td>
            If set to true, polygon operations might be slower. Handle with care!
            If true, all polygons which are used for polygon operations must have set this property to true
            Might only make sense for polygons, which are rotated/moved a lot of times before polygonoperations like Union are done, then true might be more performant
            Default=false
            </td></tr><tr><td><a href="1936dcff-22e6-33ef-7b30-9267100ece39.htm">EdgeCount</a></td><td>
            Count of edges in polygon.
            </td></tr><tr><td><a href="bc1d444b-bc1b-1bc0-27b1-6d26814fd4c2.htm">IsTextPoly</a></td><td>
            This field may contain the information, whether the original objects of this polygon had the .nomenclature attribute
            IODBLayer::PolygonizeNets() fills this information, most other functions not.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDLFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="edd62b02-d0f2-c700-8389-ad3ccb324a95.htm">AddArc</a></td><td>
            Add an arc to the polygon with outline elements (e.g. rounds at the endings).
            </td></tr><tr><td><a href="c8a7358f-bfa3-566d-9388-20ba08b4187f.htm">AddCircle</a></td><td>
            Add an complete circle to the polygon.
            </td></tr><tr><td><a href="d913ce6f-4812-c91e-4b49-3ef3045271f8.htm">AddEdge(IEdge)</a></td><td>
            Add an edge (ILineEdge or IArcEdge) to the polygon.
            </td></tr><tr><td><a href="9a4dcced-2520-f18b-7015-ff58642281ca.htm">AddEdge(PointD, PointD)</a></td><td>
            Add an ILineEdge to the polygon.
            </td></tr><tr><td><a href="259170bf-2d8a-b77e-c292-9d0ec204205d.htm">AddEdge(PointD, PointD, PointD, Boolean)</a></td><td>
            Add an arc Edge to the polygon (its create the IArcEdge internal)
            </td></tr><tr><td><a href="3209185c-af98-5b43-9a76-8d8010451ded.htm">AddEdge(PointD, PointD, PointD, Double, Boolean)</a></td><td>
            Add an arc Edge to the polygon (its create the IArcEdge internal)
            </td></tr><tr><td><a href="38ec9fe8-6f8d-f9a1-44c2-04d44d7a6471.htm">AddEllipse</a></td><td>
            Calculates an ellipse of an rectangle.
            </td></tr><tr><td><a href="60018759-9c8f-6b0f-1c9e-e2378d9d0574.htm">AddLine</a></td><td>
            Add an line to the polygon with outline elments (e.g. rounds at the end).
            </td></tr><tr><td><a href="efc1ad22-8c90-fb8e-e65f-14858539ed88.htm">AddOversize</a></td><td>
            Resulting Polygon will be
            a) CW if val greater than 0
            b) CCW if val smaller than 0
            </td></tr><tr><td><a href="67504024-f8c1-cc8d-0a23-c6560706ed34.htm">AddPie</a></td><td>
            Add pie to this polygon.
            </td></tr><tr><td><a href="ca786309-0f13-d537-5679-e9e6531e9e8d.htm">AddPolygon</a></td><td>
            Add complete polygon to current polygon.
            </td></tr><tr><td><a href="d94a4484-248d-aa11-9817-39429e5789e6.htm">AddRectangle</a></td><td>
            Add a rectangle to this polygon.
            </td></tr><tr><td><a href="5daea068-1d55-36d7-a1e8-33665dce00d1.htm">BuildInternalEdgeHash</a></td><td>
            Builds the internal Edge Hash. Edges might be changed (split) during the process. Use with Caution!
            </td></tr><tr><td><a href="d9f9907c-71b8-7248-4b48-ae3fb92b81f9.htm">Clear</a></td><td>
            Clears all Edges in the Polygon and resets the Bounds to Empty
            </td></tr><tr><td><a href="f2f0553b-9f25-8e9c-f0fa-8b0e78ea02ce.htm">Clone</a></td><td>
            Clone the object to get a second polygon with same values.
            </td></tr><tr><td><a href="c960a4f9-27ba-f3ee-237f-19566438da7e.htm">CombinePolygons</a></td><td>
            Combine two polygons and make one polygon of them.
            This connect both with two lines who overlapping on start end end.
            </td></tr><tr><td><a href="44e06c49-c0ef-0844-83a4-555198e23cc2.htm">Difference</a></td><td>
            Calculates the difference between this and a second polygon. It modifies this and returns the reference to this.
            </td></tr><tr><td><a href="088fec6e-5667-4daa-0b60-7101c8bcc2f9.htm">DistanceTo(IEdge, PointD<span id="LST346F65DC_0" data-languageSpecificText="cpp=%"></span>, PointD<span id="LST346F65DC_1" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Calculate distance from this polygon to second polygon.
            </td></tr><tr><td><a href="89db6d36-c6fd-8e0f-624a-a5a86687db04.htm">DistanceTo(IPolyClass, PointD<span id="LST346F65DC_2" data-languageSpecificText="cpp=%"></span>, PointD<span id="LST346F65DC_3" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Calculate distance from this polygon to second polygon.
            </td></tr><tr><td><a href="da5cdf85-afe9-29b8-b2f8-96d6a1ea7b60.htm">DoesIntersect</a></td><td>
            If the SecondObject intersect with this Object it returns true.
            </td></tr><tr><td><a href="ae89ad6a-18a6-0278-3e31-7bbe19f26fb2.htm">Draw</a></td><td>
            Draws the Polygon on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="9a518064-afec-5dee-5524-7108fa0bab5e.htm">DrawFilled(Graphics, Color, IPCBIWindow, Int32, Int32)</a></td><td>
            Fills the Polygon on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            (Not very performant when used for multiple polygons. Use static IPolyClass.DrawFilled() instead)
            </td></tr><tr><td><a href="b75fb808-f7d4-7c00-0a17-495fedb8cc28.htm">DrawFilled(Graphics, Color, MatrixD, Int32, Int32)</a></td><td>
            Fills the Polygon on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            (Not very performant when used for multiple polygons. Use static IPolyClass.DrawFilled() instead)
            </td></tr><tr><td><a href="e1650e59-df28-5da4-a10f-31876d14e525.htm">DrawFilled(List<span id="LST346F65DC_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Graphics, MatrixD, Int32, Int32)</a></td><td>
            Draws the List of Polygons filled on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="d0ca74b9-88b9-1dad-4839-0f8889d7461d.htm">DrawFilled(List<span id="LST346F65DC_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Graphics, Color, IPCBIWindow, Int32, Int32)</a></td><td>
            Draws the List of Polygons filled on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="1989df77-d689-917f-f920-8616131fd814.htm">DrawFilled(List<span id="LST346F65DC_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Graphics, MatrixD, Int32, Int32, IPolyClass<span id="LST346F65DC_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>FillMode, Color)</a></td><td>
            Draws the List of Polygons filled on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="b5034acc-3041-d6d0-a04a-4f7367f989d7.htm">DrawFilled(List<span id="LST346F65DC_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Graphics, Color, IPCBIWindow, Int32, Int32, MatrixD)</a></td><td>
            Draws the List of Polygons filled on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="4209cf8e-69ae-0867-adea-1882511f5130.htm">DrawFilled(List<span id="LST346F65DC_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Graphics, Color, IPCBIWindow, Int32, Int32, MatrixD, IPolyClass<span id="LST346F65DC_15" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>FillMode, Color)</a></td><td>
            Draws the List of Polygons filled on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="d79c75cc-3aae-8c98-1401-96a99d242f81.htm">DrawOutline</a></td><td>
            Draws the List of Polygons on the given Graphics by using the current World-Client transformation of the IPCBIWindow.
            </td></tr><tr><td><a href="383daff3-cfb8-6670-d459-8d66e469c991.htm">Equals</a></td><td>
            Compares two polygons.
            <br />(Overrides <span class="noLink">Object<span id="LST346F65DC_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</span>)</td></tr><tr><td><a href="bdbeb356-447f-e04d-74d5-bfc5552170af.htm">EqualsNull</a></td><td>
            Determines whether the IPolyClass is null.
            </td></tr><tr><td><a href="f222dd24-1904-e772-048f-72c6c11a2930.htm">Flatten</a></td><td>
            Flatten cuts all arcs in small line elments with length "FlattenLength" in mils.
            </td></tr><tr><td><a href="a9701efb-7327-337e-378c-0b0d774ed2fe.htm">FromRectangle</a></td><td>
            Create IPolyClass from Rectangle.
            </td></tr><tr><td><a href="a7f890af-41b8-6cbc-a971-c340036b94ae.htm">GetArea</a></td><td>
            Calculate the area of this polygon.
            </td></tr><tr><td><a href="85e951f7-30a0-b64f-053f-c0335e32f8a7.htm">GetBounds</a></td><td>
            bounds of polygon
            </td></tr><tr><td><a href="51bd27d5-4e1f-b012-1f72-0f442856474a.htm">GetCircumference</a></td><td>
            Returns the circumference of the polygon in mils
            </td></tr><tr><td><a href="aa51a36d-16ed-10ae-4c14-561350727b6e.htm">GetEdgeCount</a></td><td>
            Returns number of Edges in this Polygon
            </td></tr><tr><td><a href="ab2d483a-8d67-471b-1d2a-2c91dacd6e8c.htm">GetEdgeIndex</a></td><td>
            Returns the Index of the given edge in the list
            </td></tr><tr><td><a href="8b751373-1ead-298a-57bc-a6157ed9a26a.htm">GetEdges</a></td><td>
            Create a new list of Edges from this polygon.
            </td></tr><tr><td><a href="83679674-5ffe-f80b-e284-7f47bd4f81df.htm">GetHashCode</a></td><td>
            Gets the HashCode.
            <br />(Overrides <span class="noLink">Object<span id="LST346F65DC_17" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LST346F65DC_18" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><a href="72008175-b2b0-18ed-4dfc-553f36e84b12.htm">GetHashFromPolygon</a></td><td>
            Gets a string representing a size reduced b/w image of this polygon
            </td></tr><tr><td><a href="8c69b1af-9b07-b65d-ea7a-ce0f17464337.htm">GetIntersectingPoints(IPolyClass)</a></td><td>
            Returns a list of Intersecting Points of the Poly with the given Poly
            </td></tr><tr><td><a href="7c85ec56-585b-2a3c-beae-ea1b48944e8c.htm">GetIntersectingPoints(IEdge, List<span id="LST346F65DC_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LST346F65DC_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST346F65DC_21" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Returns a list of Intersecting Points of the Poly with the given Edge. Also the Edge-Indices which are intersecting are returned in indexList
            </td></tr><tr><td><a href="843a1234-8615-fe0b-b26c-bcabd72f0e28.htm">GetIntersectingPoints(IEdge, List<span id="LST346F65DC_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LST346F65DC_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST346F65DC_24" data-languageSpecificText="cpp=%"></span>, Int32)</a></td><td>
            Returns a list of Intersecting Points of the Poly with the given Edge. Also the Edge-Indices which are intersecting are returned in indexList
            </td></tr><tr><td><a href="2d701d71-8472-0c03-c3af-66f2341033c5.htm">GetOutline</a></td><td>
            Get outline elements as IObjectSpecifics.
            </td></tr><tr><td><a href="8f3c2453-f6fb-a351-cf63-eb50f55ec8d0.htm">GetRasterEdges</a></td><td>
            Create a new list of Edges from this polygon with y values in the raster(s) crossing the give Rectangle.
            </td></tr><tr><td><a href="5a7f2610-6ac7-908a-1626-ac43dbc70143.htm">GetSubPolygons<span id="LST346F65DC_25" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Calculate all sub polygons and return a list of them, the list is empty if no subpoly are calculated.
            </td></tr><tr><td><a href="c585a4ec-06ac-53bf-03a7-37eb228c3a32.htm">GetSubPolygons(Double)</a></td><td>
            Create a List of all subPolygons.
            </td></tr><tr><td><a href="5765a8c3-05aa-078a-55b4-36949fe69e10.htm">GetSurfaceFromPolygon(IODBLayer)</a></td><td>
            Create a new Surface on the ParentLayer. This works only if edges are sorted and only one polygon is included.
            </td></tr><tr><td><a href="f85b173b-ec69-fa4e-79a9-6b2d7c4b914e.htm">GetSurfaceFromPolygon(IODBLayer, Boolean)</a></td><td>
            Create a new Surface on the ParentLayer. This works only if edges are sorted!
            </td></tr><tr><td><a href="4e91213e-bb02-055e-63c4-3c35a54458e5.htm">GetSurfaceFromPolygon(IODBLayer, Boolean, Boolean)</a></td><td>
            Create a new Surface on the ParentLayer. This works only if edges are sorted!
            </td></tr><tr><td><a href="1953eb80-2e3c-2913-b9e9-909d0ac88463.htm">InnerSortOfPolygonElements</a></td><td>
            Sort inner elements and build groubs of connected edges.
            </td></tr><tr><td><a href="7ddc7a64-3e93-2288-f748-3b42d018e369.htm">Intersect</a></td><td>
            Calculate the intersection part of this and a second polygon
            (Does not change 'this' polygon).
            </td></tr><tr><td><a href="69b34a39-5a48-2163-c287-7f5271270862.htm">IsAnyPointOfSecondObjectIncluded</a></td><td>
            Check if any Point of second PolyClass is included in this PolyClass.
            </td></tr><tr><td><a href="2924d4fa-4e20-57fc-a9e3-b83cf755ca67.htm">IsClockWise</a></td><td>
            Returns true if Polygon is Clockwise
            </td></tr><tr><td><a href="16f8586a-2ee5-3e9e-d8eb-966a1becf3f6.htm">IsClosed</a></td><td>
            Check the whether polygon is closed?
            This method is very slow, do use it carfully.
            </td></tr><tr><td><a href="af0b1efe-06c7-9602-f957-3c39bd0cbad1.htm">isEqualsTol</a></td><td>
            Compares two polygons.
            </td></tr><tr><td><a href="21640ee9-76b5-f276-5bab-be5fce719332.htm">IsPointOfSecondObjectIncluded</a></td><td>
            If the first point of the SecondObject is in this object it returns true;
            </td></tr><tr><td><a href="4fdac3c7-df4c-8e6e-4445-961b0bae0f5a.htm">IsSelfIntersecting</a></td><td>
            Checks all edges for self intersecting of this polygon.
            </td></tr><tr><td><a href="ce54f516-da60-0d7c-5a6e-92c3c47f905e.htm">PointInPolygon</a></td><td>
            Checks the given point p is inside of the polygon.
            </td></tr><tr><td><a href="f13e1648-4ee2-1941-1714-370ee773c5d2.htm">RemoveDoubleEdges</a></td><td>
            If there are double edges in the polygon outline, they are removed. The original polygon will be changed!
            Some other checks and operations need "clean" polygons without double edges, if necessary call this method first.
            </td></tr><tr><td><a href="56de86d5-3039-4142-bca9-50fd0f18cb86.htm">Reverse</a></td><td>
            Change direction of edges (Isle to hole and holes to isle).
            </td></tr><tr><td><a href="0acf31e3-7f9c-92a7-036f-801beae71f76.htm">Rotate</a></td><td>
            Rotate the polygon.
            </td></tr><tr><td><a href="26a73e47-4b94-1efd-493f-f78a25dc8982.htm">Scale</a></td><td>
            Scales the Polygon
            </td></tr><tr><td><a href="4880ac90-4213-8ff2-6c7e-1a184f06f861.htm">SetInternalPolarity</a></td><td>
            Sets the internal Polarity. This polarity is e.g. used at IPolyClass.Union() to determine if a polygon should be Unioned or Cutted.
            </td></tr><tr><td><a href="23022d47-fb5d-1a34-a925-b534570a3a2d.htm">SplitInIsleAndHoles<span id="LST346F65DC_26" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Sortes the Sub-Polygons in single Isles (including their holes)
            </td></tr><tr><td><a href="e01434a9-fe40-d86a-3ecd-3652f4fb6893.htm">SplitInIsleAndHoles(IPCBIWindow, IODBLayer)</a></td><td>
            Check all subpolygons for holes and isles, make a list of new surfaces for each isle with own holes.
            </td></tr><tr><td><a href="d38a29c8-1d04-afcc-27c6-58359f69f293.htm">Transform</a></td><td>
            Transforms the poylgon by the given Matrix
            </td></tr><tr><td><a href="f7751969-c436-9825-0bde-3246754419cf.htm">Translate(Double, Double)</a></td><td>
            Move the poygon.
            </td></tr><tr><td><a href="aa042a54-b976-1952-f723-9eec4d8a9655.htm">Translate(Single, Single)</a></td><td>
            Move the poygon.
            </td></tr><tr><td><a href="6cc2f290-f6b3-46f1-1efe-1952f1faa05b.htm">Union(IPolyClass)</a></td><td>
            Union combines this and the second poly, it return this with modifications.
            </td></tr><tr><td><a href="fd986229-4a4d-c807-7dad-3f791e61e57b.htm">Union(List<span id="LST346F65DC_27" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IPolyClass<span id="LST346F65DC_28" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Union combines a list of polygones to a new polygon.
            </td></tr><tr><td><a href="c435787e-0f62-9b0c-a637-7436c21ef3fa.htm">UpdateBounds</a></td><td>
            Check all edges and calculate bound new.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="ID0XB0FASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="8400e39c-5925-f992-25e1-8544eecc5d07.htm">Equality(IPolyClass, IPolyClass)</a></td><td>
            override the operator == to campair two IPolyClass
            </td></tr><tr><td><a href="22b1a18c-0361-a8ee-96ea-962d91fe6319.htm">Inequality(IPolyClass, IPolyClass)</a></td><td>
            override the operator !=
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDJFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="c6e00158-ee69-06e2-695f-580e182ac759.htm">Tag</a></td><td>
            Temporary object to store in the IPolyClass.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAFASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="cf564da4-913e-f5b0-3901-1c87d3bdbc31.htm">CalculateCenterOfGravity</a></td><td>
            Calculate the center of gravity for the polygon.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="a9d6f4ba-7ed1-99b5-c0cd-3955c7247c79.htm">CleanUpPolygon</a></td><td>
            Combine lines and arcs if they have same start/end point and same angle/center/direction. This removes some of the edges to get simpl polygons.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="69782f01-69a7-2a67-685e-cc63ce4fbf9e.htm">CleanUpPolygon</a></td><td>
            Combine lines and arcs if they have same start/end point and same angle/center/direction. This removes some of the edges to get simpl polygons.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="8f0c26ff-31a9-e651-f9fa-e4c4200745a4.htm">GetConvexHullOfPoly</a></td><td>
            Returns the convex Hull of a given Polygon.
            Only works on closed and flattened polygons.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="5754e519-1a68-75f6-a4c2-feafec748417.htm">GetMinBoundingBox</a></td><td>
            Calculates the minimum bounding box of a convex polygon
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="5b9bee94-692b-f9b4-82d5-c228376a4102.htm">GetPropValue</a></td><td><br />(Defined by <a href="81889612-2229-b5e1-6b4a-b6477a6f50ad.htm">ExtensionsMethods</a>)</td></tr><tr><td><a href="2a2cee28-cae8-cd47-df70-008434218225.htm">IsCircle</a></td><td><br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="762058a1-5679-3db0-3087-d6abd1e92d6e.htm">IsOctagon</a></td><td>
            Try to find out it is a octagon. This requires sorted lines for each side of the octagon.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr><tr><td><a href="fb4a3d6e-ad85-ac8b-6043-c31b23210897.htm">IsRectangle</a></td><td>
            Try to find out it is a rectangle. This requires sorted lines for each side of the rectangle.
            <br />(Defined by <a href="a15fc443-88d8-d365-12b6-c65496823ed8.htm">Extensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="aebba05c-63e9-6190-bbdf-1cd6211b775a.htm">PCBI.MathUtils Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column">more details online<p><a href="http://www.pcb-investigator.com" target="_blank" rel="noopener noreferrer">http://www.pcb-investigator.com</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40easylogix.de?Subject=PCB-Investigator%20Interface%20Documentation">support@easylogix.de</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>